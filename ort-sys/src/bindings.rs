/* automatically generated by rust-bindgen 0.65.1 */

#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum ResultCode {
    Ok = 0,
    Error = -1,
}
extern "C" {
    #[link_name = "\u{1}__ZN16inference_engine3sys22get_last_error_messageEv"]
    pub fn get_last_error_message() -> *const ::std::os::raw::c_char;
}
extern "C" {
    #[link_name = "\u{1}__ZN16inference_engine3sys23create_inference_engineEPKvmPPv"]
    pub fn create_inference_engine(
        model_data: *const ::std::os::raw::c_void,
        model_data_size_bytes: usize,
        engine: *mut *mut ::std::os::raw::c_void,
    ) -> ResultCode;
}
extern "C" {
    #[link_name = "\u{1}__ZN16inference_engine3sys24destroy_inference_engineEPv"]
    pub fn destroy_inference_engine(engine: *mut ::std::os::raw::c_void) -> ResultCode;
}
extern "C" {
    #[link_name = "\u{1}__ZN16inference_engine3sys15get_input_countEPKv"]
    pub fn get_input_count(engine: *const ::std::os::raw::c_void) -> usize;
}
extern "C" {
    #[link_name = "\u{1}__ZN16inference_engine3sys16get_output_countEPKv"]
    pub fn get_output_count(engine: *const ::std::os::raw::c_void) -> usize;
}
extern "C" {
    #[link_name = "\u{1}__ZN16inference_engine3sys15get_input_shapeEPKvmPPKmPm"]
    pub fn get_input_shape(
        engine: *const ::std::os::raw::c_void,
        index: usize,
        shape_data: *mut *const usize,
        shape_size: *mut usize,
    );
}
extern "C" {
    #[link_name = "\u{1}__ZN16inference_engine3sys16get_output_shapeEPKvmPPKmPm"]
    pub fn get_output_shape(
        engine: *const ::std::os::raw::c_void,
        index: usize,
        shape_data: *mut *const usize,
        shape_size: *mut usize,
    );
}
extern "C" {
    #[link_name = "\u{1}__ZN16inference_engine3sys15set_input_shapeEPvmPKmm"]
    pub fn set_input_shape(
        engine: *mut ::std::os::raw::c_void,
        index: usize,
        shape_data: *const usize,
        shape_size: usize,
    ) -> ResultCode;
}
extern "C" {
    #[link_name = "\u{1}__ZN16inference_engine3sys16set_output_shapeEPvmPKmm"]
    pub fn set_output_shape(
        engine: *mut ::std::os::raw::c_void,
        index: usize,
        shape_data: *const usize,
        shape_size: usize,
    ) -> ResultCode;
}
extern "C" {
    #[link_name = "\u{1}__ZN16inference_engine3sys14get_input_dataEPvm"]
    pub fn get_input_data(engine: *mut ::std::os::raw::c_void, index: usize) -> *mut f32;
}
extern "C" {
    #[link_name = "\u{1}__ZN16inference_engine3sys15get_output_dataEPKvm"]
    pub fn get_output_data(engine: *const ::std::os::raw::c_void, index: usize) -> *const f32;
}
extern "C" {
    #[link_name = "\u{1}__ZN16inference_engine3sys14set_input_dataEPvmPKf"]
    pub fn set_input_data(
        engine: *mut ::std::os::raw::c_void,
        index: usize,
        data: *const f32,
    ) -> ResultCode;
}
extern "C" {
    #[link_name = "\u{1}__ZN16inference_engine3sys15set_output_dataEPvmPf"]
    pub fn set_output_data(
        engine: *mut ::std::os::raw::c_void,
        index: usize,
        data: *mut f32,
    ) -> ResultCode;
}
extern "C" {
    #[link_name = "\u{1}__ZN16inference_engine3sys3runEPv"]
    pub fn run(engine: *mut ::std::os::raw::c_void) -> ResultCode;
}
